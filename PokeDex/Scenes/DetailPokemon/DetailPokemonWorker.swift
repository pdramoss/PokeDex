//
//  DetailPokemonWorker.swift
//  PokeDex
//
//  Created by Pedro Ramos on 23/10/19.
//  Copyright (c) 2019 Pedro Ramos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPokemonWorkerProtocol: class {
    func fetchPokemon(id: Int, completion: @escaping(Result<PokemonResponse, Error>) -> Void)
    func fetchImage(id: Int, completion: @escaping(Result<UIImage?, Error>) -> Void)
}

class DetailPokemonWorker: DetailPokemonWorkerProtocol {
    var networkManager = NetworkManager()
    
    func fetchPokemon(id: Int, completion: @escaping(Result<PokemonResponse, Error>) -> Void) {
        networkManager.getPokemon(id: id) { (response) in
            switch response {
            case .success(let pokemon):
                completion(.success(pokemon))
            case .failure(let error):
                completion(.failure(error))
            }
        }
    }
    
    func fetchImage(id: Int, completion: @escaping (Result<UIImage?, Error>) -> Void) {
        networkManager.getFrontDefaultImage(id: id) { (response) in
            switch response {
            case .success(let image):
                completion(.success(image))
            case .failure(let error):
                completion(.failure(error))
            }
        }
    }
}
